scalar Cursor
scalar Time

type PageInfo {
    hasNextPage: Boolean!
    hasPreviousPage: Boolean!
    startCursor: Cursor
    endCursor: Cursor
}

type AirportConnection {
    totalCount: Int!
    pageInfo: PageInfo!
    edges: [AirportEdge!]!
}

type AirportEdge {
    node: Airport!
    cursor: Cursor!
}

type MetarConnection {
    totalCount: Int!
    pageInfo: PageInfo!
    edges: [MetarEdge!]!
}

type MetarEdge {
    node: Metar!
    cursor: Cursor!
}

type Query {
    getAirports(
        after: Cursor
        first: Int
        before: Cursor
        last: Int
        identifier: String
        hasWeather: Boolean
    ): AirportConnection!
}

type MetarWithDistance {
    distance: Float
    metar: Metar
}

extend type Airport {
    """Returns all Runways for this Airport. They can be filtered with the closed parameter."""
    runways(closed: Boolean): [Runway!]! @goField(forceResolver: true)

    """Returns last METARs reported by this airport."""
    metars(after: Cursor, first: Int, before: Cursor, last: Int): MetarConnection! @goField(forceResolver: true)

    """Returns the closest METAR to the airport, within the given radius (in km)."""
    metarsVicinity(first: Int = 1, radius: Float = 50.0): [MetarWithDistance!]! @goField(forceResolver: true)
}