// Code generated by ent, DO NOT EDIT.

package runway

import (
	"time"

	"entgo.io/ent/dialect/sql"
	"entgo.io/ent/dialect/sql/sqlgraph"
	"metar.gg/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldID), id))
	})
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldID), id))
	})
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldID), id))
	})
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		v := make([]interface{}, len(ids))
		for i := range v {
			v[i] = ids[i]
		}
		s.Where(sql.In(s.C(FieldID), v...))
	})
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		v := make([]interface{}, len(ids))
		for i := range v {
			v[i] = ids[i]
		}
		s.Where(sql.NotIn(s.C(FieldID), v...))
	})
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldID), id))
	})
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldID), id))
	})
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldID), id))
	})
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldID), id))
	})
}

// Hash applies equality check predicate on the "hash" field. It's identical to HashEQ.
func Hash(v uint64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHash), v))
	})
}

// ImportFlag applies equality check predicate on the "import_flag" field. It's identical to ImportFlagEQ.
func ImportFlag(v bool) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldImportFlag), v))
	})
}

// CreateTime applies equality check predicate on the "create_time" field. It's identical to CreateTimeEQ.
func CreateTime(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreateTime), v))
	})
}

// UpdateTime applies equality check predicate on the "update_time" field. It's identical to UpdateTimeEQ.
func UpdateTime(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldUpdateTime), v))
	})
}

// AirportIdentifier applies equality check predicate on the "airport_identifier" field. It's identical to AirportIdentifierEQ.
func AirportIdentifier(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldAirportIdentifier), v))
	})
}

// Length applies equality check predicate on the "length" field. It's identical to LengthEQ.
func Length(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLength), v))
	})
}

// Width applies equality check predicate on the "width" field. It's identical to WidthEQ.
func Width(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldWidth), v))
	})
}

// Surface applies equality check predicate on the "surface" field. It's identical to SurfaceEQ.
func Surface(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldSurface), v))
	})
}

// Lighted applies equality check predicate on the "lighted" field. It's identical to LightedEQ.
func Lighted(v bool) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLighted), v))
	})
}

// Closed applies equality check predicate on the "closed" field. It's identical to ClosedEQ.
func Closed(v bool) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldClosed), v))
	})
}

// LowNumberedRunwayEndIdentifier applies equality check predicate on the "low_numbered_runway_end_identifier" field. It's identical to LowNumberedRunwayEndIdentifierEQ.
func LowNumberedRunwayEndIdentifier(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndLatitude applies equality check predicate on the "low_numbered_runway_end_latitude" field. It's identical to LowNumberedRunwayEndLatitudeEQ.
func LowNumberedRunwayEndLatitude(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndLatitude), v))
	})
}

// LowNumberedRunwayEndLongitude applies equality check predicate on the "low_numbered_runway_end_longitude" field. It's identical to LowNumberedRunwayEndLongitudeEQ.
func LowNumberedRunwayEndLongitude(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndLongitude), v))
	})
}

// LowNumberedRunwayEndElevation applies equality check predicate on the "low_numbered_runway_end_elevation" field. It's identical to LowNumberedRunwayEndElevationEQ.
func LowNumberedRunwayEndElevation(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndElevation), v))
	})
}

// LowNumberedRunwayEndHeading applies equality check predicate on the "low_numbered_runway_end_heading" field. It's identical to LowNumberedRunwayEndHeadingEQ.
func LowNumberedRunwayEndHeading(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndHeading), v))
	})
}

// LowNumberedRunwayEndDisplaced applies equality check predicate on the "low_numbered_runway_end_displaced" field. It's identical to LowNumberedRunwayEndDisplacedEQ.
func LowNumberedRunwayEndDisplaced(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndDisplaced), v))
	})
}

// HighNumberedRunwayEndIdentifier applies equality check predicate on the "high_numbered_runway_end_identifier" field. It's identical to HighNumberedRunwayEndIdentifierEQ.
func HighNumberedRunwayEndIdentifier(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndLatitude applies equality check predicate on the "high_numbered_runway_end_latitude" field. It's identical to HighNumberedRunwayEndLatitudeEQ.
func HighNumberedRunwayEndLatitude(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndLatitude), v))
	})
}

// HighNumberedRunwayEndLongitude applies equality check predicate on the "high_numbered_runway_end_longitude" field. It's identical to HighNumberedRunwayEndLongitudeEQ.
func HighNumberedRunwayEndLongitude(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndLongitude), v))
	})
}

// HighNumberedRunwayEndElevation applies equality check predicate on the "high_numbered_runway_end_elevation" field. It's identical to HighNumberedRunwayEndElevationEQ.
func HighNumberedRunwayEndElevation(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndElevation), v))
	})
}

// HighNumberedRunwayEndHeading applies equality check predicate on the "high_numbered_runway_end_heading" field. It's identical to HighNumberedRunwayEndHeadingEQ.
func HighNumberedRunwayEndHeading(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndHeading), v))
	})
}

// HighNumberedRunwayEndDisplaced applies equality check predicate on the "high_numbered_runway_end_displaced" field. It's identical to HighNumberedRunwayEndDisplacedEQ.
func HighNumberedRunwayEndDisplaced(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndDisplaced), v))
	})
}

// HashEQ applies the EQ predicate on the "hash" field.
func HashEQ(v uint64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHash), v))
	})
}

// HashNEQ applies the NEQ predicate on the "hash" field.
func HashNEQ(v uint64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldHash), v))
	})
}

// HashIn applies the In predicate on the "hash" field.
func HashIn(vs ...uint64) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldHash), v...))
	})
}

// HashNotIn applies the NotIn predicate on the "hash" field.
func HashNotIn(vs ...uint64) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldHash), v...))
	})
}

// HashGT applies the GT predicate on the "hash" field.
func HashGT(v uint64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldHash), v))
	})
}

// HashGTE applies the GTE predicate on the "hash" field.
func HashGTE(v uint64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldHash), v))
	})
}

// HashLT applies the LT predicate on the "hash" field.
func HashLT(v uint64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldHash), v))
	})
}

// HashLTE applies the LTE predicate on the "hash" field.
func HashLTE(v uint64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldHash), v))
	})
}

// ImportFlagEQ applies the EQ predicate on the "import_flag" field.
func ImportFlagEQ(v bool) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldImportFlag), v))
	})
}

// ImportFlagNEQ applies the NEQ predicate on the "import_flag" field.
func ImportFlagNEQ(v bool) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldImportFlag), v))
	})
}

// CreateTimeEQ applies the EQ predicate on the "create_time" field.
func CreateTimeEQ(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldCreateTime), v))
	})
}

// CreateTimeNEQ applies the NEQ predicate on the "create_time" field.
func CreateTimeNEQ(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldCreateTime), v))
	})
}

// CreateTimeIn applies the In predicate on the "create_time" field.
func CreateTimeIn(vs ...time.Time) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldCreateTime), v...))
	})
}

// CreateTimeNotIn applies the NotIn predicate on the "create_time" field.
func CreateTimeNotIn(vs ...time.Time) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldCreateTime), v...))
	})
}

// CreateTimeGT applies the GT predicate on the "create_time" field.
func CreateTimeGT(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldCreateTime), v))
	})
}

// CreateTimeGTE applies the GTE predicate on the "create_time" field.
func CreateTimeGTE(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldCreateTime), v))
	})
}

// CreateTimeLT applies the LT predicate on the "create_time" field.
func CreateTimeLT(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldCreateTime), v))
	})
}

// CreateTimeLTE applies the LTE predicate on the "create_time" field.
func CreateTimeLTE(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldCreateTime), v))
	})
}

// UpdateTimeEQ applies the EQ predicate on the "update_time" field.
func UpdateTimeEQ(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldUpdateTime), v))
	})
}

// UpdateTimeNEQ applies the NEQ predicate on the "update_time" field.
func UpdateTimeNEQ(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldUpdateTime), v))
	})
}

// UpdateTimeIn applies the In predicate on the "update_time" field.
func UpdateTimeIn(vs ...time.Time) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldUpdateTime), v...))
	})
}

// UpdateTimeNotIn applies the NotIn predicate on the "update_time" field.
func UpdateTimeNotIn(vs ...time.Time) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldUpdateTime), v...))
	})
}

// UpdateTimeGT applies the GT predicate on the "update_time" field.
func UpdateTimeGT(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldUpdateTime), v))
	})
}

// UpdateTimeGTE applies the GTE predicate on the "update_time" field.
func UpdateTimeGTE(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldUpdateTime), v))
	})
}

// UpdateTimeLT applies the LT predicate on the "update_time" field.
func UpdateTimeLT(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldUpdateTime), v))
	})
}

// UpdateTimeLTE applies the LTE predicate on the "update_time" field.
func UpdateTimeLTE(v time.Time) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldUpdateTime), v))
	})
}

// AirportIdentifierEQ applies the EQ predicate on the "airport_identifier" field.
func AirportIdentifierEQ(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldAirportIdentifier), v))
	})
}

// AirportIdentifierNEQ applies the NEQ predicate on the "airport_identifier" field.
func AirportIdentifierNEQ(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldAirportIdentifier), v))
	})
}

// AirportIdentifierIn applies the In predicate on the "airport_identifier" field.
func AirportIdentifierIn(vs ...string) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldAirportIdentifier), v...))
	})
}

// AirportIdentifierNotIn applies the NotIn predicate on the "airport_identifier" field.
func AirportIdentifierNotIn(vs ...string) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldAirportIdentifier), v...))
	})
}

// AirportIdentifierGT applies the GT predicate on the "airport_identifier" field.
func AirportIdentifierGT(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldAirportIdentifier), v))
	})
}

// AirportIdentifierGTE applies the GTE predicate on the "airport_identifier" field.
func AirportIdentifierGTE(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldAirportIdentifier), v))
	})
}

// AirportIdentifierLT applies the LT predicate on the "airport_identifier" field.
func AirportIdentifierLT(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldAirportIdentifier), v))
	})
}

// AirportIdentifierLTE applies the LTE predicate on the "airport_identifier" field.
func AirportIdentifierLTE(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldAirportIdentifier), v))
	})
}

// AirportIdentifierContains applies the Contains predicate on the "airport_identifier" field.
func AirportIdentifierContains(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldAirportIdentifier), v))
	})
}

// AirportIdentifierHasPrefix applies the HasPrefix predicate on the "airport_identifier" field.
func AirportIdentifierHasPrefix(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldAirportIdentifier), v))
	})
}

// AirportIdentifierHasSuffix applies the HasSuffix predicate on the "airport_identifier" field.
func AirportIdentifierHasSuffix(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldAirportIdentifier), v))
	})
}

// AirportIdentifierEqualFold applies the EqualFold predicate on the "airport_identifier" field.
func AirportIdentifierEqualFold(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldAirportIdentifier), v))
	})
}

// AirportIdentifierContainsFold applies the ContainsFold predicate on the "airport_identifier" field.
func AirportIdentifierContainsFold(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldAirportIdentifier), v))
	})
}

// LengthEQ applies the EQ predicate on the "length" field.
func LengthEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLength), v))
	})
}

// LengthNEQ applies the NEQ predicate on the "length" field.
func LengthNEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldLength), v))
	})
}

// LengthIn applies the In predicate on the "length" field.
func LengthIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldLength), v...))
	})
}

// LengthNotIn applies the NotIn predicate on the "length" field.
func LengthNotIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldLength), v...))
	})
}

// LengthGT applies the GT predicate on the "length" field.
func LengthGT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldLength), v))
	})
}

// LengthGTE applies the GTE predicate on the "length" field.
func LengthGTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldLength), v))
	})
}

// LengthLT applies the LT predicate on the "length" field.
func LengthLT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldLength), v))
	})
}

// LengthLTE applies the LTE predicate on the "length" field.
func LengthLTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldLength), v))
	})
}

// WidthEQ applies the EQ predicate on the "width" field.
func WidthEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldWidth), v))
	})
}

// WidthNEQ applies the NEQ predicate on the "width" field.
func WidthNEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldWidth), v))
	})
}

// WidthIn applies the In predicate on the "width" field.
func WidthIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldWidth), v...))
	})
}

// WidthNotIn applies the NotIn predicate on the "width" field.
func WidthNotIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldWidth), v...))
	})
}

// WidthGT applies the GT predicate on the "width" field.
func WidthGT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldWidth), v))
	})
}

// WidthGTE applies the GTE predicate on the "width" field.
func WidthGTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldWidth), v))
	})
}

// WidthLT applies the LT predicate on the "width" field.
func WidthLT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldWidth), v))
	})
}

// WidthLTE applies the LTE predicate on the "width" field.
func WidthLTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldWidth), v))
	})
}

// SurfaceEQ applies the EQ predicate on the "surface" field.
func SurfaceEQ(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldSurface), v))
	})
}

// SurfaceNEQ applies the NEQ predicate on the "surface" field.
func SurfaceNEQ(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldSurface), v))
	})
}

// SurfaceIn applies the In predicate on the "surface" field.
func SurfaceIn(vs ...string) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldSurface), v...))
	})
}

// SurfaceNotIn applies the NotIn predicate on the "surface" field.
func SurfaceNotIn(vs ...string) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldSurface), v...))
	})
}

// SurfaceGT applies the GT predicate on the "surface" field.
func SurfaceGT(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldSurface), v))
	})
}

// SurfaceGTE applies the GTE predicate on the "surface" field.
func SurfaceGTE(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldSurface), v))
	})
}

// SurfaceLT applies the LT predicate on the "surface" field.
func SurfaceLT(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldSurface), v))
	})
}

// SurfaceLTE applies the LTE predicate on the "surface" field.
func SurfaceLTE(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldSurface), v))
	})
}

// SurfaceContains applies the Contains predicate on the "surface" field.
func SurfaceContains(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldSurface), v))
	})
}

// SurfaceHasPrefix applies the HasPrefix predicate on the "surface" field.
func SurfaceHasPrefix(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldSurface), v))
	})
}

// SurfaceHasSuffix applies the HasSuffix predicate on the "surface" field.
func SurfaceHasSuffix(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldSurface), v))
	})
}

// SurfaceEqualFold applies the EqualFold predicate on the "surface" field.
func SurfaceEqualFold(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldSurface), v))
	})
}

// SurfaceContainsFold applies the ContainsFold predicate on the "surface" field.
func SurfaceContainsFold(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldSurface), v))
	})
}

// LightedEQ applies the EQ predicate on the "lighted" field.
func LightedEQ(v bool) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLighted), v))
	})
}

// LightedNEQ applies the NEQ predicate on the "lighted" field.
func LightedNEQ(v bool) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldLighted), v))
	})
}

// ClosedEQ applies the EQ predicate on the "closed" field.
func ClosedEQ(v bool) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldClosed), v))
	})
}

// ClosedNEQ applies the NEQ predicate on the "closed" field.
func ClosedNEQ(v bool) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldClosed), v))
	})
}

// LowNumberedRunwayEndIdentifierEQ applies the EQ predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierEQ(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndIdentifierNEQ applies the NEQ predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierNEQ(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndIdentifierIn applies the In predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierIn(vs ...string) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldLowNumberedRunwayEndIdentifier), v...))
	})
}

// LowNumberedRunwayEndIdentifierNotIn applies the NotIn predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierNotIn(vs ...string) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldLowNumberedRunwayEndIdentifier), v...))
	})
}

// LowNumberedRunwayEndIdentifierGT applies the GT predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierGT(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndIdentifierGTE applies the GTE predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierGTE(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndIdentifierLT applies the LT predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierLT(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndIdentifierLTE applies the LTE predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierLTE(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndIdentifierContains applies the Contains predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierContains(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndIdentifierHasPrefix applies the HasPrefix predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierHasPrefix(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndIdentifierHasSuffix applies the HasSuffix predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierHasSuffix(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndIdentifierEqualFold applies the EqualFold predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierEqualFold(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndIdentifierContainsFold applies the ContainsFold predicate on the "low_numbered_runway_end_identifier" field.
func LowNumberedRunwayEndIdentifierContainsFold(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldLowNumberedRunwayEndIdentifier), v))
	})
}

// LowNumberedRunwayEndLatitudeEQ applies the EQ predicate on the "low_numbered_runway_end_latitude" field.
func LowNumberedRunwayEndLatitudeEQ(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndLatitude), v))
	})
}

// LowNumberedRunwayEndLatitudeNEQ applies the NEQ predicate on the "low_numbered_runway_end_latitude" field.
func LowNumberedRunwayEndLatitudeNEQ(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldLowNumberedRunwayEndLatitude), v))
	})
}

// LowNumberedRunwayEndLatitudeIn applies the In predicate on the "low_numbered_runway_end_latitude" field.
func LowNumberedRunwayEndLatitudeIn(vs ...float64) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldLowNumberedRunwayEndLatitude), v...))
	})
}

// LowNumberedRunwayEndLatitudeNotIn applies the NotIn predicate on the "low_numbered_runway_end_latitude" field.
func LowNumberedRunwayEndLatitudeNotIn(vs ...float64) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldLowNumberedRunwayEndLatitude), v...))
	})
}

// LowNumberedRunwayEndLatitudeGT applies the GT predicate on the "low_numbered_runway_end_latitude" field.
func LowNumberedRunwayEndLatitudeGT(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldLowNumberedRunwayEndLatitude), v))
	})
}

// LowNumberedRunwayEndLatitudeGTE applies the GTE predicate on the "low_numbered_runway_end_latitude" field.
func LowNumberedRunwayEndLatitudeGTE(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldLowNumberedRunwayEndLatitude), v))
	})
}

// LowNumberedRunwayEndLatitudeLT applies the LT predicate on the "low_numbered_runway_end_latitude" field.
func LowNumberedRunwayEndLatitudeLT(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldLowNumberedRunwayEndLatitude), v))
	})
}

// LowNumberedRunwayEndLatitudeLTE applies the LTE predicate on the "low_numbered_runway_end_latitude" field.
func LowNumberedRunwayEndLatitudeLTE(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldLowNumberedRunwayEndLatitude), v))
	})
}

// LowNumberedRunwayEndLongitudeEQ applies the EQ predicate on the "low_numbered_runway_end_longitude" field.
func LowNumberedRunwayEndLongitudeEQ(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndLongitude), v))
	})
}

// LowNumberedRunwayEndLongitudeNEQ applies the NEQ predicate on the "low_numbered_runway_end_longitude" field.
func LowNumberedRunwayEndLongitudeNEQ(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldLowNumberedRunwayEndLongitude), v))
	})
}

// LowNumberedRunwayEndLongitudeIn applies the In predicate on the "low_numbered_runway_end_longitude" field.
func LowNumberedRunwayEndLongitudeIn(vs ...float64) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldLowNumberedRunwayEndLongitude), v...))
	})
}

// LowNumberedRunwayEndLongitudeNotIn applies the NotIn predicate on the "low_numbered_runway_end_longitude" field.
func LowNumberedRunwayEndLongitudeNotIn(vs ...float64) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldLowNumberedRunwayEndLongitude), v...))
	})
}

// LowNumberedRunwayEndLongitudeGT applies the GT predicate on the "low_numbered_runway_end_longitude" field.
func LowNumberedRunwayEndLongitudeGT(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldLowNumberedRunwayEndLongitude), v))
	})
}

// LowNumberedRunwayEndLongitudeGTE applies the GTE predicate on the "low_numbered_runway_end_longitude" field.
func LowNumberedRunwayEndLongitudeGTE(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldLowNumberedRunwayEndLongitude), v))
	})
}

// LowNumberedRunwayEndLongitudeLT applies the LT predicate on the "low_numbered_runway_end_longitude" field.
func LowNumberedRunwayEndLongitudeLT(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldLowNumberedRunwayEndLongitude), v))
	})
}

// LowNumberedRunwayEndLongitudeLTE applies the LTE predicate on the "low_numbered_runway_end_longitude" field.
func LowNumberedRunwayEndLongitudeLTE(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldLowNumberedRunwayEndLongitude), v))
	})
}

// LowNumberedRunwayEndElevationEQ applies the EQ predicate on the "low_numbered_runway_end_elevation" field.
func LowNumberedRunwayEndElevationEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndElevation), v))
	})
}

// LowNumberedRunwayEndElevationNEQ applies the NEQ predicate on the "low_numbered_runway_end_elevation" field.
func LowNumberedRunwayEndElevationNEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldLowNumberedRunwayEndElevation), v))
	})
}

// LowNumberedRunwayEndElevationIn applies the In predicate on the "low_numbered_runway_end_elevation" field.
func LowNumberedRunwayEndElevationIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldLowNumberedRunwayEndElevation), v...))
	})
}

// LowNumberedRunwayEndElevationNotIn applies the NotIn predicate on the "low_numbered_runway_end_elevation" field.
func LowNumberedRunwayEndElevationNotIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldLowNumberedRunwayEndElevation), v...))
	})
}

// LowNumberedRunwayEndElevationGT applies the GT predicate on the "low_numbered_runway_end_elevation" field.
func LowNumberedRunwayEndElevationGT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldLowNumberedRunwayEndElevation), v))
	})
}

// LowNumberedRunwayEndElevationGTE applies the GTE predicate on the "low_numbered_runway_end_elevation" field.
func LowNumberedRunwayEndElevationGTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldLowNumberedRunwayEndElevation), v))
	})
}

// LowNumberedRunwayEndElevationLT applies the LT predicate on the "low_numbered_runway_end_elevation" field.
func LowNumberedRunwayEndElevationLT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldLowNumberedRunwayEndElevation), v))
	})
}

// LowNumberedRunwayEndElevationLTE applies the LTE predicate on the "low_numbered_runway_end_elevation" field.
func LowNumberedRunwayEndElevationLTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldLowNumberedRunwayEndElevation), v))
	})
}

// LowNumberedRunwayEndHeadingEQ applies the EQ predicate on the "low_numbered_runway_end_heading" field.
func LowNumberedRunwayEndHeadingEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndHeading), v))
	})
}

// LowNumberedRunwayEndHeadingNEQ applies the NEQ predicate on the "low_numbered_runway_end_heading" field.
func LowNumberedRunwayEndHeadingNEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldLowNumberedRunwayEndHeading), v))
	})
}

// LowNumberedRunwayEndHeadingIn applies the In predicate on the "low_numbered_runway_end_heading" field.
func LowNumberedRunwayEndHeadingIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldLowNumberedRunwayEndHeading), v...))
	})
}

// LowNumberedRunwayEndHeadingNotIn applies the NotIn predicate on the "low_numbered_runway_end_heading" field.
func LowNumberedRunwayEndHeadingNotIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldLowNumberedRunwayEndHeading), v...))
	})
}

// LowNumberedRunwayEndHeadingGT applies the GT predicate on the "low_numbered_runway_end_heading" field.
func LowNumberedRunwayEndHeadingGT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldLowNumberedRunwayEndHeading), v))
	})
}

// LowNumberedRunwayEndHeadingGTE applies the GTE predicate on the "low_numbered_runway_end_heading" field.
func LowNumberedRunwayEndHeadingGTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldLowNumberedRunwayEndHeading), v))
	})
}

// LowNumberedRunwayEndHeadingLT applies the LT predicate on the "low_numbered_runway_end_heading" field.
func LowNumberedRunwayEndHeadingLT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldLowNumberedRunwayEndHeading), v))
	})
}

// LowNumberedRunwayEndHeadingLTE applies the LTE predicate on the "low_numbered_runway_end_heading" field.
func LowNumberedRunwayEndHeadingLTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldLowNumberedRunwayEndHeading), v))
	})
}

// LowNumberedRunwayEndDisplacedEQ applies the EQ predicate on the "low_numbered_runway_end_displaced" field.
func LowNumberedRunwayEndDisplacedEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldLowNumberedRunwayEndDisplaced), v))
	})
}

// LowNumberedRunwayEndDisplacedNEQ applies the NEQ predicate on the "low_numbered_runway_end_displaced" field.
func LowNumberedRunwayEndDisplacedNEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldLowNumberedRunwayEndDisplaced), v))
	})
}

// LowNumberedRunwayEndDisplacedIn applies the In predicate on the "low_numbered_runway_end_displaced" field.
func LowNumberedRunwayEndDisplacedIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldLowNumberedRunwayEndDisplaced), v...))
	})
}

// LowNumberedRunwayEndDisplacedNotIn applies the NotIn predicate on the "low_numbered_runway_end_displaced" field.
func LowNumberedRunwayEndDisplacedNotIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldLowNumberedRunwayEndDisplaced), v...))
	})
}

// LowNumberedRunwayEndDisplacedGT applies the GT predicate on the "low_numbered_runway_end_displaced" field.
func LowNumberedRunwayEndDisplacedGT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldLowNumberedRunwayEndDisplaced), v))
	})
}

// LowNumberedRunwayEndDisplacedGTE applies the GTE predicate on the "low_numbered_runway_end_displaced" field.
func LowNumberedRunwayEndDisplacedGTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldLowNumberedRunwayEndDisplaced), v))
	})
}

// LowNumberedRunwayEndDisplacedLT applies the LT predicate on the "low_numbered_runway_end_displaced" field.
func LowNumberedRunwayEndDisplacedLT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldLowNumberedRunwayEndDisplaced), v))
	})
}

// LowNumberedRunwayEndDisplacedLTE applies the LTE predicate on the "low_numbered_runway_end_displaced" field.
func LowNumberedRunwayEndDisplacedLTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldLowNumberedRunwayEndDisplaced), v))
	})
}

// HighNumberedRunwayEndIdentifierEQ applies the EQ predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierEQ(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndIdentifierNEQ applies the NEQ predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierNEQ(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndIdentifierIn applies the In predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierIn(vs ...string) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldHighNumberedRunwayEndIdentifier), v...))
	})
}

// HighNumberedRunwayEndIdentifierNotIn applies the NotIn predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierNotIn(vs ...string) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldHighNumberedRunwayEndIdentifier), v...))
	})
}

// HighNumberedRunwayEndIdentifierGT applies the GT predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierGT(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndIdentifierGTE applies the GTE predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierGTE(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndIdentifierLT applies the LT predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierLT(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndIdentifierLTE applies the LTE predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierLTE(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndIdentifierContains applies the Contains predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierContains(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.Contains(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndIdentifierHasPrefix applies the HasPrefix predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierHasPrefix(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.HasPrefix(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndIdentifierHasSuffix applies the HasSuffix predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierHasSuffix(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.HasSuffix(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndIdentifierEqualFold applies the EqualFold predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierEqualFold(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EqualFold(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndIdentifierContainsFold applies the ContainsFold predicate on the "high_numbered_runway_end_identifier" field.
func HighNumberedRunwayEndIdentifierContainsFold(v string) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.ContainsFold(s.C(FieldHighNumberedRunwayEndIdentifier), v))
	})
}

// HighNumberedRunwayEndLatitudeEQ applies the EQ predicate on the "high_numbered_runway_end_latitude" field.
func HighNumberedRunwayEndLatitudeEQ(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndLatitude), v))
	})
}

// HighNumberedRunwayEndLatitudeNEQ applies the NEQ predicate on the "high_numbered_runway_end_latitude" field.
func HighNumberedRunwayEndLatitudeNEQ(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldHighNumberedRunwayEndLatitude), v))
	})
}

// HighNumberedRunwayEndLatitudeIn applies the In predicate on the "high_numbered_runway_end_latitude" field.
func HighNumberedRunwayEndLatitudeIn(vs ...float64) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldHighNumberedRunwayEndLatitude), v...))
	})
}

// HighNumberedRunwayEndLatitudeNotIn applies the NotIn predicate on the "high_numbered_runway_end_latitude" field.
func HighNumberedRunwayEndLatitudeNotIn(vs ...float64) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldHighNumberedRunwayEndLatitude), v...))
	})
}

// HighNumberedRunwayEndLatitudeGT applies the GT predicate on the "high_numbered_runway_end_latitude" field.
func HighNumberedRunwayEndLatitudeGT(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldHighNumberedRunwayEndLatitude), v))
	})
}

// HighNumberedRunwayEndLatitudeGTE applies the GTE predicate on the "high_numbered_runway_end_latitude" field.
func HighNumberedRunwayEndLatitudeGTE(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldHighNumberedRunwayEndLatitude), v))
	})
}

// HighNumberedRunwayEndLatitudeLT applies the LT predicate on the "high_numbered_runway_end_latitude" field.
func HighNumberedRunwayEndLatitudeLT(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldHighNumberedRunwayEndLatitude), v))
	})
}

// HighNumberedRunwayEndLatitudeLTE applies the LTE predicate on the "high_numbered_runway_end_latitude" field.
func HighNumberedRunwayEndLatitudeLTE(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldHighNumberedRunwayEndLatitude), v))
	})
}

// HighNumberedRunwayEndLongitudeEQ applies the EQ predicate on the "high_numbered_runway_end_longitude" field.
func HighNumberedRunwayEndLongitudeEQ(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndLongitude), v))
	})
}

// HighNumberedRunwayEndLongitudeNEQ applies the NEQ predicate on the "high_numbered_runway_end_longitude" field.
func HighNumberedRunwayEndLongitudeNEQ(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldHighNumberedRunwayEndLongitude), v))
	})
}

// HighNumberedRunwayEndLongitudeIn applies the In predicate on the "high_numbered_runway_end_longitude" field.
func HighNumberedRunwayEndLongitudeIn(vs ...float64) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldHighNumberedRunwayEndLongitude), v...))
	})
}

// HighNumberedRunwayEndLongitudeNotIn applies the NotIn predicate on the "high_numbered_runway_end_longitude" field.
func HighNumberedRunwayEndLongitudeNotIn(vs ...float64) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldHighNumberedRunwayEndLongitude), v...))
	})
}

// HighNumberedRunwayEndLongitudeGT applies the GT predicate on the "high_numbered_runway_end_longitude" field.
func HighNumberedRunwayEndLongitudeGT(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldHighNumberedRunwayEndLongitude), v))
	})
}

// HighNumberedRunwayEndLongitudeGTE applies the GTE predicate on the "high_numbered_runway_end_longitude" field.
func HighNumberedRunwayEndLongitudeGTE(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldHighNumberedRunwayEndLongitude), v))
	})
}

// HighNumberedRunwayEndLongitudeLT applies the LT predicate on the "high_numbered_runway_end_longitude" field.
func HighNumberedRunwayEndLongitudeLT(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldHighNumberedRunwayEndLongitude), v))
	})
}

// HighNumberedRunwayEndLongitudeLTE applies the LTE predicate on the "high_numbered_runway_end_longitude" field.
func HighNumberedRunwayEndLongitudeLTE(v float64) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldHighNumberedRunwayEndLongitude), v))
	})
}

// HighNumberedRunwayEndElevationEQ applies the EQ predicate on the "high_numbered_runway_end_elevation" field.
func HighNumberedRunwayEndElevationEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndElevation), v))
	})
}

// HighNumberedRunwayEndElevationNEQ applies the NEQ predicate on the "high_numbered_runway_end_elevation" field.
func HighNumberedRunwayEndElevationNEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldHighNumberedRunwayEndElevation), v))
	})
}

// HighNumberedRunwayEndElevationIn applies the In predicate on the "high_numbered_runway_end_elevation" field.
func HighNumberedRunwayEndElevationIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldHighNumberedRunwayEndElevation), v...))
	})
}

// HighNumberedRunwayEndElevationNotIn applies the NotIn predicate on the "high_numbered_runway_end_elevation" field.
func HighNumberedRunwayEndElevationNotIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldHighNumberedRunwayEndElevation), v...))
	})
}

// HighNumberedRunwayEndElevationGT applies the GT predicate on the "high_numbered_runway_end_elevation" field.
func HighNumberedRunwayEndElevationGT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldHighNumberedRunwayEndElevation), v))
	})
}

// HighNumberedRunwayEndElevationGTE applies the GTE predicate on the "high_numbered_runway_end_elevation" field.
func HighNumberedRunwayEndElevationGTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldHighNumberedRunwayEndElevation), v))
	})
}

// HighNumberedRunwayEndElevationLT applies the LT predicate on the "high_numbered_runway_end_elevation" field.
func HighNumberedRunwayEndElevationLT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldHighNumberedRunwayEndElevation), v))
	})
}

// HighNumberedRunwayEndElevationLTE applies the LTE predicate on the "high_numbered_runway_end_elevation" field.
func HighNumberedRunwayEndElevationLTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldHighNumberedRunwayEndElevation), v))
	})
}

// HighNumberedRunwayEndHeadingEQ applies the EQ predicate on the "high_numbered_runway_end_heading" field.
func HighNumberedRunwayEndHeadingEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndHeading), v))
	})
}

// HighNumberedRunwayEndHeadingNEQ applies the NEQ predicate on the "high_numbered_runway_end_heading" field.
func HighNumberedRunwayEndHeadingNEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldHighNumberedRunwayEndHeading), v))
	})
}

// HighNumberedRunwayEndHeadingIn applies the In predicate on the "high_numbered_runway_end_heading" field.
func HighNumberedRunwayEndHeadingIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldHighNumberedRunwayEndHeading), v...))
	})
}

// HighNumberedRunwayEndHeadingNotIn applies the NotIn predicate on the "high_numbered_runway_end_heading" field.
func HighNumberedRunwayEndHeadingNotIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldHighNumberedRunwayEndHeading), v...))
	})
}

// HighNumberedRunwayEndHeadingGT applies the GT predicate on the "high_numbered_runway_end_heading" field.
func HighNumberedRunwayEndHeadingGT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldHighNumberedRunwayEndHeading), v))
	})
}

// HighNumberedRunwayEndHeadingGTE applies the GTE predicate on the "high_numbered_runway_end_heading" field.
func HighNumberedRunwayEndHeadingGTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldHighNumberedRunwayEndHeading), v))
	})
}

// HighNumberedRunwayEndHeadingLT applies the LT predicate on the "high_numbered_runway_end_heading" field.
func HighNumberedRunwayEndHeadingLT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldHighNumberedRunwayEndHeading), v))
	})
}

// HighNumberedRunwayEndHeadingLTE applies the LTE predicate on the "high_numbered_runway_end_heading" field.
func HighNumberedRunwayEndHeadingLTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldHighNumberedRunwayEndHeading), v))
	})
}

// HighNumberedRunwayEndDisplacedEQ applies the EQ predicate on the "high_numbered_runway_end_displaced" field.
func HighNumberedRunwayEndDisplacedEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.EQ(s.C(FieldHighNumberedRunwayEndDisplaced), v))
	})
}

// HighNumberedRunwayEndDisplacedNEQ applies the NEQ predicate on the "high_numbered_runway_end_displaced" field.
func HighNumberedRunwayEndDisplacedNEQ(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NEQ(s.C(FieldHighNumberedRunwayEndDisplaced), v))
	})
}

// HighNumberedRunwayEndDisplacedIn applies the In predicate on the "high_numbered_runway_end_displaced" field.
func HighNumberedRunwayEndDisplacedIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.In(s.C(FieldHighNumberedRunwayEndDisplaced), v...))
	})
}

// HighNumberedRunwayEndDisplacedNotIn applies the NotIn predicate on the "high_numbered_runway_end_displaced" field.
func HighNumberedRunwayEndDisplacedNotIn(vs ...int) predicate.Runway {
	v := make([]interface{}, len(vs))
	for i := range v {
		v[i] = vs[i]
	}
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.NotIn(s.C(FieldHighNumberedRunwayEndDisplaced), v...))
	})
}

// HighNumberedRunwayEndDisplacedGT applies the GT predicate on the "high_numbered_runway_end_displaced" field.
func HighNumberedRunwayEndDisplacedGT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GT(s.C(FieldHighNumberedRunwayEndDisplaced), v))
	})
}

// HighNumberedRunwayEndDisplacedGTE applies the GTE predicate on the "high_numbered_runway_end_displaced" field.
func HighNumberedRunwayEndDisplacedGTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.GTE(s.C(FieldHighNumberedRunwayEndDisplaced), v))
	})
}

// HighNumberedRunwayEndDisplacedLT applies the LT predicate on the "high_numbered_runway_end_displaced" field.
func HighNumberedRunwayEndDisplacedLT(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LT(s.C(FieldHighNumberedRunwayEndDisplaced), v))
	})
}

// HighNumberedRunwayEndDisplacedLTE applies the LTE predicate on the "high_numbered_runway_end_displaced" field.
func HighNumberedRunwayEndDisplacedLTE(v int) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s.Where(sql.LTE(s.C(FieldHighNumberedRunwayEndDisplaced), v))
	})
}

// HasAirport applies the HasEdge predicate on the "airport" edge.
func HasAirport() predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.To(AirportTable, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, AirportTable, AirportColumn),
		)
		sqlgraph.HasNeighbors(s, step)
	})
}

// HasAirportWith applies the HasEdge predicate on the "airport" edge with a given conditions (other predicates).
func HasAirportWith(preds ...predicate.Airport) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		step := sqlgraph.NewStep(
			sqlgraph.From(Table, FieldID),
			sqlgraph.To(AirportInverseTable, FieldID),
			sqlgraph.Edge(sqlgraph.M2O, true, AirportTable, AirportColumn),
		)
		sqlgraph.HasNeighborsWith(s, step, func(s *sql.Selector) {
			for _, p := range preds {
				p(s)
			}
		})
	})
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Runway) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for _, p := range predicates {
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Runway) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		s1 := s.Clone().SetP(nil)
		for i, p := range predicates {
			if i > 0 {
				s1.Or()
			}
			p(s1)
		}
		s.Where(s1.P())
	})
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Runway) predicate.Runway {
	return predicate.Runway(func(s *sql.Selector) {
		p(s.Not())
	})
}
