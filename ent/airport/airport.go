// Code generated by ent, DO NOT EDIT.

package airport

import (
	"time"
)

const (
	// Label holds the string label denoting the airport type in the database.
	Label = "airport"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldHash holds the string denoting the hash field in the database.
	FieldHash = "hash"
	// FieldImportFlag holds the string denoting the import_flag field in the database.
	FieldImportFlag = "import_flag"
	// FieldCreateTime holds the string denoting the create_time field in the database.
	FieldCreateTime = "create_time"
	// FieldUpdateTime holds the string denoting the update_time field in the database.
	FieldUpdateTime = "update_time"
	// FieldIdentifier holds the string denoting the identifier field in the database.
	FieldIdentifier = "identifier"
	// FieldType holds the string denoting the type field in the database.
	FieldType = "type"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldLatitude holds the string denoting the latitude field in the database.
	FieldLatitude = "latitude"
	// FieldLongitude holds the string denoting the longitude field in the database.
	FieldLongitude = "longitude"
	// FieldElevation holds the string denoting the elevation field in the database.
	FieldElevation = "elevation"
	// FieldContinent holds the string denoting the continent field in the database.
	FieldContinent = "continent"
	// FieldCountry holds the string denoting the country field in the database.
	FieldCountry = "country"
	// FieldRegion holds the string denoting the region field in the database.
	FieldRegion = "region"
	// FieldMunicipality holds the string denoting the municipality field in the database.
	FieldMunicipality = "municipality"
	// FieldScheduledService holds the string denoting the scheduled_service field in the database.
	FieldScheduledService = "scheduled_service"
	// FieldGpsCode holds the string denoting the gps_code field in the database.
	FieldGpsCode = "gps_code"
	// FieldIataCode holds the string denoting the iata_code field in the database.
	FieldIataCode = "iata_code"
	// FieldLocalCode holds the string denoting the local_code field in the database.
	FieldLocalCode = "local_code"
	// FieldWebsite holds the string denoting the website field in the database.
	FieldWebsite = "website"
	// FieldWikipedia holds the string denoting the wikipedia field in the database.
	FieldWikipedia = "wikipedia"
	// FieldKeywords holds the string denoting the keywords field in the database.
	FieldKeywords = "keywords"
	// EdgeRunways holds the string denoting the runways edge name in mutations.
	EdgeRunways = "runways"
	// Table holds the table name of the airport in the database.
	Table = "airports"
	// RunwaysTable is the table that holds the runways relation/edge.
	RunwaysTable = "runways"
	// RunwaysInverseTable is the table name for the Runway entity.
	// It exists in this package in order to avoid circular dependency with the "runway" package.
	RunwaysInverseTable = "runways"
	// RunwaysColumn is the table column denoting the runways relation/edge.
	RunwaysColumn = "airport_runways"
)

// Columns holds all SQL columns for airport fields.
var Columns = []string{
	FieldID,
	FieldHash,
	FieldImportFlag,
	FieldCreateTime,
	FieldUpdateTime,
	FieldIdentifier,
	FieldType,
	FieldName,
	FieldLatitude,
	FieldLongitude,
	FieldElevation,
	FieldContinent,
	FieldCountry,
	FieldRegion,
	FieldMunicipality,
	FieldScheduledService,
	FieldGpsCode,
	FieldIataCode,
	FieldLocalCode,
	FieldWebsite,
	FieldWikipedia,
	FieldKeywords,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultImportFlag holds the default value on creation for the "import_flag" field.
	DefaultImportFlag bool
	// DefaultCreateTime holds the default value on creation for the "create_time" field.
	DefaultCreateTime func() time.Time
	// DefaultUpdateTime holds the default value on creation for the "update_time" field.
	DefaultUpdateTime func() time.Time
	// UpdateDefaultUpdateTime holds the default value on update for the "update_time" field.
	UpdateDefaultUpdateTime func() time.Time
)
