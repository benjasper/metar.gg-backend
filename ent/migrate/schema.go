// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// AirportsColumns holds the columns for the "airports" table.
	AirportsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "hash", Type: field.TypeUint64},
		{Name: "import_flag", Type: field.TypeBool, Default: false},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "identifier", Type: field.TypeString},
		{Name: "type", Type: field.TypeString},
		{Name: "name", Type: field.TypeString},
		{Name: "latitude", Type: field.TypeFloat64},
		{Name: "longitude", Type: field.TypeFloat64},
		{Name: "elevation", Type: field.TypeInt},
		{Name: "continent", Type: field.TypeString},
		{Name: "country", Type: field.TypeString},
		{Name: "region", Type: field.TypeString},
		{Name: "municipality", Type: field.TypeString},
		{Name: "scheduled_service", Type: field.TypeBool},
		{Name: "gps_code", Type: field.TypeString},
		{Name: "iata_code", Type: field.TypeString},
		{Name: "local_code", Type: field.TypeString},
		{Name: "website", Type: field.TypeString},
		{Name: "wikipedia", Type: field.TypeString},
		{Name: "keywords", Type: field.TypeJSON},
	}
	// AirportsTable holds the schema information for the "airports" table.
	AirportsTable = &schema.Table{
		Name:       "airports",
		Columns:    AirportsColumns,
		PrimaryKey: []*schema.Column{AirportsColumns[0]},
		Indexes: []*schema.Index{
			{
				Name:    "airport_hash",
				Unique:  true,
				Columns: []*schema.Column{AirportsColumns[1]},
			},
			{
				Name:    "airport_identifier",
				Unique:  false,
				Columns: []*schema.Column{AirportsColumns[5]},
			},
		},
	}
	// FrequenciesColumns holds the columns for the "frequencies" table.
	FrequenciesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// FrequenciesTable holds the schema information for the "frequencies" table.
	FrequenciesTable = &schema.Table{
		Name:       "frequencies",
		Columns:    FrequenciesColumns,
		PrimaryKey: []*schema.Column{FrequenciesColumns[0]},
	}
	// RunwaysColumns holds the columns for the "runways" table.
	RunwaysColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "hash", Type: field.TypeUint64},
		{Name: "import_flag", Type: field.TypeBool, Default: false},
		{Name: "create_time", Type: field.TypeTime},
		{Name: "update_time", Type: field.TypeTime},
		{Name: "airport_identifier", Type: field.TypeString},
		{Name: "length", Type: field.TypeInt},
		{Name: "width", Type: field.TypeInt},
		{Name: "surface", Type: field.TypeString},
		{Name: "lighted", Type: field.TypeBool},
		{Name: "closed", Type: field.TypeBool},
		{Name: "low_numbered_runway_end_identifier", Type: field.TypeString},
		{Name: "low_numbered_runway_end_latitude", Type: field.TypeFloat64},
		{Name: "low_numbered_runway_end_longitude", Type: field.TypeFloat64},
		{Name: "low_numbered_runway_end_elevation", Type: field.TypeInt},
		{Name: "low_numbered_runway_end_heading", Type: field.TypeInt},
		{Name: "low_numbered_runway_end_displaced", Type: field.TypeInt},
		{Name: "high_numbered_runway_end_identifier", Type: field.TypeString},
		{Name: "high_numbered_runway_end_latitude", Type: field.TypeFloat64},
		{Name: "high_numbered_runway_end_longitude", Type: field.TypeFloat64},
		{Name: "high_numbered_runway_end_elevation", Type: field.TypeInt},
		{Name: "high_numbered_runway_end_heading", Type: field.TypeInt},
		{Name: "high_numbered_runway_end_displaced", Type: field.TypeInt},
		{Name: "airport_runways", Type: field.TypeInt, Nullable: true},
	}
	// RunwaysTable holds the schema information for the "runways" table.
	RunwaysTable = &schema.Table{
		Name:       "runways",
		Columns:    RunwaysColumns,
		PrimaryKey: []*schema.Column{RunwaysColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "runways_airports_runways",
				Columns:    []*schema.Column{RunwaysColumns[23]},
				RefColumns: []*schema.Column{AirportsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "runway_hash",
				Unique:  true,
				Columns: []*schema.Column{RunwaysColumns[1]},
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		AirportsTable,
		FrequenciesTable,
		RunwaysTable,
	}
)

func init() {
	RunwaysTable.ForeignKeys[0].RefTable = AirportsTable
}
