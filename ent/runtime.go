// Code generated by ent, DO NOT EDIT.

package ent

import (
	"metar.gg/ent/airport"
	"metar.gg/ent/frequency"
	"metar.gg/ent/runway"
	"metar.gg/ent/schema"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	airportMixin := schema.Airport{}.Mixin()
	airportMixinFields0 := airportMixin[0].Fields()
	_ = airportMixinFields0
	airportFields := schema.Airport{}.Fields()
	_ = airportFields
	// airportDescImportFlag is the schema descriptor for import_flag field.
	airportDescImportFlag := airportMixinFields0[2].Descriptor()
	// airport.DefaultImportFlag holds the default value on creation for the import_flag field.
	airport.DefaultImportFlag = airportDescImportFlag.Default.(bool)
	frequencyMixin := schema.Frequency{}.Mixin()
	frequencyMixinFields0 := frequencyMixin[0].Fields()
	_ = frequencyMixinFields0
	frequencyFields := schema.Frequency{}.Fields()
	_ = frequencyFields
	// frequencyDescImportFlag is the schema descriptor for import_flag field.
	frequencyDescImportFlag := frequencyMixinFields0[2].Descriptor()
	// frequency.DefaultImportFlag holds the default value on creation for the import_flag field.
	frequency.DefaultImportFlag = frequencyDescImportFlag.Default.(bool)
	runwayMixin := schema.Runway{}.Mixin()
	runwayMixinFields0 := runwayMixin[0].Fields()
	_ = runwayMixinFields0
	runwayFields := schema.Runway{}.Fields()
	_ = runwayFields
	// runwayDescImportFlag is the schema descriptor for import_flag field.
	runwayDescImportFlag := runwayMixinFields0[2].Descriptor()
	// runway.DefaultImportFlag holds the default value on creation for the import_flag field.
	runway.DefaultImportFlag = runwayDescImportFlag.Default.(bool)
}
